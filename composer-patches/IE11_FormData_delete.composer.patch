diff --git a/vendor/magento/module-negotiable-quote/view/frontend/web/js/create-negotiable-quote.js b/vendor/magento/module-negotiable-quote/view/frontend/web/js/create-negotiable-quote.js
index 8d4d7fa34..9becf4a9a 100644
--- a/vendor/magento/module-negotiable-quote/view/frontend/web/js/create-negotiable-quote.js
+++ b/vendor/magento/module-negotiable-quote/view/frontend/web/js/create-negotiable-quote.js
@@ -13,9 +13,9 @@ define([
     'Magento_NegotiableQuote/js/model/create-quote-popup',
     'Magento_Ui/js/modal/modal',
     'mage/translate'
-], function ($, _, quote, customerData, mageTemplate, modalTpl) {
+  ], function ($, _, quote, customerData, mageTemplate, modalTpl) {
     'use strict';
-
+  
     $.widget('mage.createNegotiableQuote', {
         options: {
             url: '',
@@ -46,17 +46,17 @@ define([
                 $.mage.__('Coupon codes and gift cards are not allowed on quotes. Choose whether you\'d like to keep the coupon code/gift card without requesting a quote, or request a quote without the coupon code/gift card.') //eslint-disable-line max-len
             ]
         },
-
+  
         /**
          *
          * @private
          */
         _create: function () {
             var options;
-
+  
             this.modalBlockTmpl = mageTemplate(modalTpl);
             this._setRequestModal();
-
+  
             options = {
                 'type': 'popup',
                 'modalClass': 'popup-request-quote',
@@ -66,12 +66,12 @@ define([
                 'title': this.options.popupTitles.quoteRequest,
                 'buttons': []
             };
-
+  
             this.options.moveUrl = this.options.moveUrl + this.options.urlPost;
             this._bind();
             $(this.element).modal(options);
         },
-
+  
         /**
          *
          * @private
@@ -89,18 +89,18 @@ define([
                 this.ajaxPOST();
             }, this));
         },
-
+  
         /**
          * @private
          */
         _setRequestModal: function () {
             var self = this,
                 options;
-
+  
             this.options.popup = _.last($(this.modalBlockTmpl({
                 data: this.options.quoteRulesModalText
             })));
-
+  
             options = {
                 'type': 'popup',
                 'modalClass': 'popup-request-quote-discounts popup-request-rules',
@@ -109,7 +109,7 @@ define([
                 'title': this.options.popupTitles.quoteRules,
                 'buttons': [{
                     text: $.mage.__('Go to Checkout'),
-
+  
                     /** Click action */
                     click: function () {
                         this.closeModal();
@@ -119,7 +119,7 @@ define([
                 },
                 {
                     text: $.mage.__('Request a Quote'),
-
+  
                     /** Click action */
                     click: function () {
                         this.closeModal();
@@ -128,7 +128,7 @@ define([
                 },
                 {
                     text: $.mage.__('Cancel'),
-
+  
                     /** Click action */
                     click: function () {
                         this.closeModal();
@@ -136,10 +136,10 @@ define([
                     'class': 'action cancel'
                 }]
             };
-
+  
             $(this.options.popup).modal(options);
         },
-
+  
         /**
          *
          * @private
@@ -147,7 +147,7 @@ define([
         showModal: function () {
             this._checkDiscount();
         },
-
+  
         /**
          *
          * @private
@@ -155,7 +155,7 @@ define([
         closeModal: function () {
             $(this.element).modal('closeModal');
         },
-
+  
         /**
          *
          * @private
@@ -163,7 +163,7 @@ define([
         _checkDiscount: function () {
             if (!this.options.isAjax) {
                 this.options.isAjax = true;
-
+  
                 $.ajax({
                     url: this.options.url,
                     data: {
@@ -178,7 +178,7 @@ define([
                         } else {
                             $(this.element).modal('openModal');
                         }
-
+  
                         this.options.isAjax = false;
                     }, this),
                     error: $.proxy(function () {
@@ -187,7 +187,7 @@ define([
                 });
             }
         },
-
+  
         /**
          * Retrieve form data
          *
@@ -197,7 +197,7 @@ define([
         _getFormData: function () {
             return new FormData($(this.options.form)[0]);
         },
-
+  
         /**
          * Filter form data
          *
@@ -207,17 +207,17 @@ define([
          */
         _filterFormData: function (formData) {
             var fileInputs = $('input[type="file"]', this.options.form);
-
+  
             /* Delete empty file inputs */
             fileInputs.each(function (i, input) {
-                if (input.files.length === 0) {
+                if (FormData.prototype.delete && input.files.length === 0) {
                     formData.delete(input.name);
                 }
             });
-
+  
             return formData;
         },
-
+  
         /**
          * Retrieve filtered form data
          *
@@ -226,20 +226,20 @@ define([
          */
         _getFilteredFormData: function () {
             var formData = this._getFormData();
-
+  
             return this._filterFormData(formData);
         },
-
+  
         /**
          *
          * @private
          */
         ajaxPOST: function () {
             var formData = this._getFilteredFormData();
-
+  
             if ($(this.options.form).valid()) {
                 this.options.isAjax = true;
-
+  
                 $.ajax({
                     url: this.options.moveUrl + quote.getQuoteId(),
                     data: formData,
@@ -252,11 +252,11 @@ define([
                     success: $.proxy(function (res) {
                         $(this.options.popupSelector).modal('closeModal');
                         this.options.isAjax = false;
-
+  
                         if (res.status !== 'error') {
                             customerData.invalidate(['cart']);
                         }
-
+  
                         if (res.data && res.data.url) {
                             this.moveTo(res.data.url);
                         }
@@ -267,7 +267,7 @@ define([
                 });
             }
         },
-
+  
         /**
          *
          * @private
@@ -276,6 +276,7 @@ define([
             location.href = url;
         }
     });
-
+  
     return $.mage.createNegotiableQuote;
-});
+  });
+  
\ No newline at end of file
