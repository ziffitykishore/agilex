---

- name: prebuild provision
  hosts: localhost
  connection: local
  tasks:
    - name: install ioncube
      yum:
        name: php71u-ioncube-loader
        state: present
      become: yes
    - name: set chmod key
      file:
        state: directory
        path: "{{ item }}"
        owner: magento
        group: magento
        mode: 0700
      become: yes
      loop:
        - /home/magento/.ssh
        - /home/magento/.composer
    - name: change to  magento:nginx permissions
      file:
        state: directory
        path: "{{ item }}"
        mode: u=rwX,g=rwX,o=rX
        recurse: yes
        owner: magento
        group: nginx
      loop:
        - /usr/local/rvm/
        - /var/lib/php/session/
        - "{{ site_root }}/"
      become: yes
    - name: copy private key
      copy:
        remote_src: yes
        src: files/id_rsa
        dest: "/home/magento/.ssh/id_rsa"
        owner: magento
        group: nginx
        mode: 0600
    - name: apply templates
      template:
        src: "{{ item.src }}.j2"
        dest: "{{ item.dest }}"
      become: "{{ item.become }}"
      loop:
        - src: app/etc/env.php
          dest: "{{ playbook_dir }}/app/etc/env.php"
          become: no
        - src: auth.json
          dest: "/home/magento/.composer/auth.json"
          become: no
        - src: default.conf
          dest: "/etc/nginx/sites-available/{{ site_domain }}.conf"
          become: yes
    - name: remove vault_pass
      file: path="{{ item }}" state=absent
      become: yes
      loop:
        - "/home/magento/.vault_pass"
        - "/docker-entrypoint.d/mysql.sh"
  tags:
    - prebuild

- name: install provision
  hosts: localhost
  connection: local
  tasks:
    - name: set default owner:group to magento:nginx
      command: "{{ item }} {{ site_root }}"
      become: yes
      loop:
        - "setfacl -R -m d:g:nginx:rwX"
        - "setfacl -R -m d:u:magento:rwX"
        - "umask 002 -R"
  tags:
    - owner

- name: build provision
  hosts: localhost
  connection: local
  tasks:
    - name: get submodules
      shell: "git {{ item }}"
      loop:
        - "fetch --recurse-submodules --tags origin"
        - "submodule update --init --recursive"
    - name: make sure vendor doesn't exist
      file:
        path: "{{ playbook_dir }}/vendor"
        state: absent
    - name: run composer
      shell: composer install
    - name: run bundle
      shell: bash -lc "bundle install"
    - name: run yarn
      shell: yarn
      args:
        executable: /bin/bash
        chdir: "{{ item }}"
      loop:
        - "{{ playbook_dir }}"
        - "{{ playbook_dir }}/vendor/somethingdigital/magento2-theme-bryantpark"
        - "{{ playbook_dir }}/vendor/snowdog/frontools"
    - name: remove vault_pass
      file: path=/home/magento/.vault_pass state=absent
    - name: make sure paths have correct user:group
      file:
        state: directory
        recurse: yes
        owner: magento
        group: nginx
        mode: u=rwX,g=rwX,o=rX
        path: "{{ playbook_dir }}"
      become: yes
  tags:
    - build

- name: sync provision
  hosts: localhost
  connection: local
  tasks:
    - name: apply template
      template:
        src: "app/etc/env.php.j2"
        dest: "{{ playbook_dir }}/app/etc/env.php"
    - name: set default owner:group to magento:nginx
      command: "{{ item }} {{ site_root }}"
      become: yes
      loop:
        - "setfacl -R -m d:g:nginx:rwX"
        - "setfacl -R -m d:u:magento:rwX"
        - "umask 002 -R"
    - name: make sure local cache clean
      file:
        state: absent
        path: "{{ playbook_dir }}/{{ item }}"
      loop:
        - var/cache
        - generated/code
        - generated/metadata
    - name: run magento upgrade
      shell: "php {{ playbook_dir }}/bin/magento {{ item }}"
      loop:
        - "app:config:import"
        - "cache:clean"
        - "setup:upgrade"
        - "deploy:mode:set --skip-compilation developer"
        - "setup:di:compile"
    - name: setup static content of theme
      shell: "php {{ playbook_dir }}/bin/magento {{ item }}"
      loop:
        - "setup:static-content:deploy '{{ magento_theme }}'"
        - "sd:dev:static --requirejs-only"
        - "sd:dev:static --requirejs-only --area adminhtml Magento/backend"
    - name: run yarn build production
      shell: "yarn build:production"
  tags:
    - sync

- name: install provision
  hosts: localhost
  connection: local
  tasks:
    - name: set default owner:group to magento:nginx
      command: "{{ item }} {{ site_root }}"
      become: yes
      loop:
        - "setfacl -R -m d:g:nginx:rwX"
        - "setfacl -R -m d:u:magento:rwX"
        - "umask 002 -R"
    - name: run magento install
      shell: |
        {{ playbook_dir }}/bin/magento setup:install \
          --db-host=database \
          --db-name=magento_database \
          --db-user=magento_user \
          --db-password=magento_password \
          --base-url=http://{{ site_domain  }}/ \
          --admin-firstname=Admin \
          --admin-lastname=User \
          --admin-email=admin@user.com \
          --admin-user=magento2 \
          --admin-password=magento2_password \
          --backend-frontname=admin \
          --key={{ magento_crypt_key }}
    - name: apply template
      template:
        src: "app/etc/env.php.j2"
        dest: "{{ playbook_dir }}/app/etc/env.php"
  tags:
    - install

