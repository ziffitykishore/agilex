---

- name: prebuild provision
  hosts: localhost
  connection: local
  tasks:
    - name: install ioncube
      yum:
        name: php71u-ioncube-loader
        state: present
      become: yes
    - name: set chmod key
      file:
        state: directory
        path: "{{ item }}"
        owner: magento
        group: magento
        mode: 0700
      become: yes
      loop:
        - /home/magento/.ssh
        - /home/magento/.composer
    - name: set default owner:group to magento:nginx
      command: "{{ item }} /var/www/vhosts/magento.test"
      become: yes
      loop:
        - "setfacl -R -m d:g:nginx:rwX"
        - "setfacl -R -m d:u:magento:rwX"
        - "umask 002 -R"
    - name: change to  magento:nginx permissions
      file:
        state: directory
        path: "{{ item }}"
        mode: u=rwX,g=rwX,o=rX
        recurse: yes
        owner: magento
        group: nginx
      loop:
        - /usr/local/rvm/
        - /var/lib/php/session/
        - /var/www/vhosts/magento.test/
      become: yes
    - name: copy private key
      copy:
        remote_src: yes
        src: files/id_rsa
        dest: "/home/magento/.ssh/id_rsa"
        owner: magento
        group: nginx
        mode: 0600
    - name: apply templates
      template:
        src: "{{ item.src }}.j2"
        dest: "{{ item.dest }}"
      become: "{{ item.become }}"
      loop:
        - src: default.conf
          dest: "/etc/nginx/sites-available/magento.test.conf"
          become: yes
    - name: remove vault_pass
      file: path=/home/magento/.vault_pass state=absent
  vars:
    magento_root: "/var/www/vhosts/magento.test/current"
    copy_nginx_certs: false
  tags:
    - prebuild

- name: run auth.json
  hosts: localhost
  tasks:
    - name: apply templates
      template:
        src: "{{ item.src }}.j2"
        dest: "{{ item.dest }}"
      become: "{{ item.become }}"
      loop:
        - src: app/etc/env.php
          dest: "{{ playbook_dir }}/app/etc/env.php"
          become: no
        - src: auth.json
          dest: "/home/magento/.composer/auth.json"
          become: no
    - name: remove vault_pass
      file: path=/home/magento/.vault_pass state=absent
  vars:
    magento_repo_username: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      33616665323761343839653364373033383339303462663930613835376163613764333962616462
      3362333630356664383736333164306361343266643565360a636463633966656632363836396465
      36306631616333333033326538366638383233383436666334663133633061373066336533386235
      3233343731633939300a366262323138653831383538373336393465376264313239376466373833
      63353234346563373737653734326564356462633837623038363831333366323566323465303665
      3637633365633764353964353565376166666235333362663965
    magento_repo_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      36316563303664616264646161386364396232353165323261386661326230383761303835326139
      3865343665393137333434643033363963613261656161360a386163313263386235353766393763
      64613337313230633332396664386431333035333765646332346139653762643031396539343663
      6635643237363561630a343239656538386466666334386464366362633165613336623466303835
      39363962363365313737646238373236373239366636636638316163323130613064323030323763
      6462313461373132303835663330383636653230336462383537
    magento_crypt_key: 4ac4e9840846688730baaf4157d50ee8
    magento_root: "/var/www/vhosts/magento.test/current"
    copy_nginx_certs: false
  tags:
    - template

- name: build provision
  hosts: localhost
  connection: local
  tasks:
    - name: make sure vendor doesn't exist
      file:
        path: "{{ playbook_dir }}/vendor"
        state: absent
    - name: run composer
      shell: composer install
    - name: run bundle
      shell: bash -lc "bundle install"
    - name: run yarn
      shell: yarn
      args:
        executable: /bin/bash
        chdir: "{{ item }}"
      loop:
        - "{{ playbook_dir }}"
        - "{{ playbook_dir }}/vendor/somethingdigital/magento2-theme-bryantpark"
        - "{{ playbook_dir }}/vendor/snowdog/frontools"
    - name: remove vault_pass
      file: path=/home/magento/.vault_pass state=absent
    - name: make sure paths have correct user:group
      file:
        state: directory
        recurse: yes
        owner: magento
        group: nginx
        mode: u=rwX,g=rwX,o=rX
        path: "{{ playbook_dir }}"
      become: yes
  tags:
    - build

- name: sync provision
  hosts: localhost
  connection: local
  tasks:
    - name: set correct url
      lineinfile:
        path: /etc/nginx/sites-enabled/magento.test.conf
        line: "  server {{ site_domain | default('magento.test') }};"
        regexp: "  server magento.test;"
      become: yes
    - name: apply template
      template:
        src: "app/etc/env.php.j2"
        dest: "{{ playbook_dir }}/app/etc/env.php"
    - name: set default owner:group to magento:nginx
      command: "{{ item }} /var/www/vhosts/magento.test"
      become: yes
      loop:
        - "setfacl -R -m d:g:nginx:rwX"
        - "setfacl -R -m d:u:magento:rwX"
        - "umask 002 -R"
    - name: make sure local cache clean
      file:
        state: absent
        path: "{{ playbook_dir }}/{{ item }}"
      loop:
        - var/cache
        - generated/code
        - generated/metadata
    - name: run magento upgrade
      shell: "php {{ playbook_dir }}/bin/magento {{ item }}"
      loop:
        - "app:config:import"
        - "cache:clean"
        - "setup:upgrade"
        - "deploy:mode:set --skip-compilation developer"
        - "setup:di:compile"
    - name: setup static content of theme
      shell: "php {{ playbook_dir }}/bin/magento {{ item }}"
      loop:
        - "setup:static-content:deploy '{{ magento_theme }}'"
        - "sd:dev:static --requirejs-only"
        - "sd:dev:static --requirejs-only --area adminhtml Magento/backend"
    - name: run yarn build production
      shell: "yarn build:production"
  vars:
    magento_theme: "Magento/backend Travers/default"
  tags:
    - sync

- name: install provision
  hosts: localhost
  connection: local
  tasks:
    - name: set default owner:group to magento:nginx
      command: "{{ item }} /var/www/vhosts/magento.test"
      become: yes
      loop:
        - "setfacl -R -m d:g:nginx:rwX"
        - "setfacl -R -m d:u:magento:rwX"
        - "umask 002 -R"
    - name: run magento install
      shell: |
        {{ playbook_dir }}/bin/magento setup:install \
          --db-host=database \
          --db-name=magento_database \
          --db-user=magento_user \
          --db-password=magento_password \
          --base-url=http://{{ site_domain | default('magento.test') }}/ \
          --admin-firstname=Admin \
          --admin-lastname=User \
          --admin-email=admin@user.com \
          --admin-user=magento2 \
          --admin-password=magento2_password \
          --backend-frontname=admin \
          --key={{ magento_crypt_key }}
    - name: apply template
      template:
        src: "{{ item.src }}.j2"
        dest: "{{ item.dest }}"
      loop:
        - src: app/etc/env.php
          dest: "{{ playbook_dir }}/app/etc/env.php"
  vars:
    magento_crypt_key: 4ac4e9840846688730baaf4157d50ee8
  tags:
    - install

