diff --git a/vendor/magento/module-catalog/Model/Indexer/Product/Category/Action/Rows.php b/vendor/magento/module-catalog/Model/Indexer/Product/Category/Action/Rows.php
index cb708695255..15ba6c8f375 100644
--- a/vendor/magento/module-catalog/Model/Indexer/Product/Category/Action/Rows.php
+++ b/vendor/magento/module-catalog/Model/Indexer/Product/Category/Action/Rows.php
@@ -105,7 +105,7 @@ class Rows extends \Magento\Catalog\Model\Indexer\Category\Product\AbstractActio
      * @throws \Exception if metadataPool doesn't contain metadata for ProductInterface
      * @throws \DomainException
      */
-    private function getProductIdsWithParents(array $childProductIds)
+    private function getProductIdsWithParents(array $childProductIds): array
     {
         /** @var \Magento\Framework\EntityManager\EntityMetadataInterface $metadata */
         $metadata = $this->metadataPool->getMetadata(\Magento\Catalog\Api\Data\ProductInterface::class);
@@ -123,8 +123,12 @@ class Rows extends \Magento\Catalog\Model\Indexer\Category\Product\AbstractActio
             );
 
         $parentProductIds = $this->connection->fetchCol($select);
+        $ids = array_unique(array_merge($childProductIds, $parentProductIds));
+        foreach ($ids as $key => $id) {
+            $ids[$key] = (int) $id;
+        }
 
-        return array_unique(array_merge($childProductIds, $parentProductIds));
+        return $ids;
     }
 
     /**
@@ -175,7 +179,7 @@ class Rows extends \Magento\Catalog\Model\Indexer\Category\Product\AbstractActio
     protected function getNonAnchorCategoriesSelect(\Magento\Store\Model\Store $store)
     {
         $select = parent::getNonAnchorCategoriesSelect($store);
-        return $select->where('ccp.product_id IN (?) OR relation.child_id IN (?)', $this->limitationByProducts);
+        return $select->where('ccp.product_id IN (?)', $this->limitationByProducts);
     }
 
     /**
@@ -216,28 +220,28 @@ class Rows extends \Magento\Catalog\Model\Indexer\Category\Product\AbstractActio
      * Returns a list of category ids which are assigned to product ids in the index
      *
      * @param array $productIds
-     * @return \Magento\Framework\Indexer\CacheContext
+     * @return array
      */
-    private function getCategoryIdsFromIndex(array $productIds)
+    private function getCategoryIdsFromIndex(array $productIds): array
     {
         $categoryIds = [];
         foreach ($this->storeManager->getStores() as $store) {
-            $categoryIds = array_merge(
-                $categoryIds,
-                $this->connection->fetchCol(
-                    $this->connection->select()
-                        ->from($this->getIndexTable($store->getId()), ['category_id'])
-                        ->where('product_id IN (?)', $productIds)
-                        ->distinct()
-                )
+            $storeCategories = $this->connection->fetchCol(
+                $this->connection->select()
+                    ->from($this->getIndexTable($store->getId()), ['category_id'])
+                    ->where('product_id IN (?)', $productIds)
+                    ->distinct()
             );
+            $categoryIds[] = $storeCategories;
         }
-        $parentCategories = $categoryIds;
+        $categoryIds = array_merge(...$categoryIds);
+
+        $parentCategories = [$categoryIds];
         foreach ($categoryIds as $categoryId) {
             $parentIds = explode('/', $this->getPathFromCategoryId($categoryId));
-            $parentCategories = array_merge($parentCategories, $parentIds);
+            $parentCategories[] = $parentIds;
         }
-        $categoryIds = array_unique($parentCategories);
+        $categoryIds = array_unique(array_merge(...$parentCategories));
 
         return $categoryIds;
     }
diff --git a/vendor/magento/module-catalog-inventory/Model/Indexer/ProductPriceIndexFilter.php b/vendor/magento/module-catalog-inventory/Model/Indexer/ProductPriceIndexFilter.php
index f9a49d4f8d1..35231b8460b 100644
--- a/vendor/magento/module-catalog-inventory/Model/Indexer/ProductPriceIndexFilter.php
+++ b/vendor/magento/module-catalog-inventory/Model/Indexer/ProductPriceIndexFilter.php
@@ -104,6 +104,10 @@ class ProductPriceIndexFilter implements PriceModifierInterface
             $select->where('stock_item.use_config_manage_stock = 0 AND stock_item.manage_stock = 1');
         }
 
+        if (!empty($entityIds)) {
+            $select->where('stock_item.product_id in (?)', $entityIds);
+        }
+
         $select->group('stock_item.product_id');
         $select->having('max_is_in_stock = 0');
 
